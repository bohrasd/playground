on:
  workflow_dispatch:
  repository_dispatch:
    types: [deploy-test]
  push:
    branches:
      - main
    paths:
      - '.github/workflows/*.yaml'

name: Deploy Test

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: test

    strategy:
      fail-fast: true
      # Set max parallel to 20 to avoid concurrent register/launch tasks number exceeding the maximum capacity (20 task)
      # https://docs.aws.amazon.com/AmazonECS/latest/APIReference/request-throttling.html
      max-parallel: 20
      matrix:
        cluster:
        - "qor5-test"
        items:
        - name: "example"
          service: "qor5-example-test"
          if: ${{ github.event.client_payload.github != '' && github.event.client_payload.github.example != '' }}
        - name: "docs"
          service: "qor5-docs-test"
          if: ${{ github.event.client_payload.github != '' && github.event.client_payload.github.docs != '' }}


    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Parsing Arguments
      id: parsing-arguments
      run: |
        echo "cluster=${{ matrix.cluster }}" >> $GITHUB_OUTPUT

        echo "app-name=${{ matrix.items.name }}" >> $GITHUB_OUTPUT

        echo "service-name=${{ matrix.items.service }}" >> $GITHUB_OUTPUT

    - name: Image From Client Payload
      id: image-from-client-payload
      if: ${{ github.event.client_payload.github != '' }}
      env:
        APP_NAME: ${{ steps.parsing-arguments.outputs.app-name }}
      run: |
        echo '${{ toJson(github.event.client_payload.github) }}' > payload.json
        echo '${{ github.event.client_payload.github[steps.parsing-arguments.outputs.app-name] == '' }}'
        echo '${{ github.event.client_payload.github[steps.parsing-arguments.outputs.app-name].image }}'
        IMAGE=$(jq --arg APP_NAME "$APP_NAME" -r '.[$APP_NAME].image' payload.json)
        echo "image=$IMAGE" >> $GITHUB_OUTPUT
